server:
  port: 8000

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka

spring:
  application:
    name: apigateway-service
  cloud:
    gateway:
      default-filters:
        - name: GlobalFilter
          args:
            baseMessage: Spring Cloud Gateway Global
            preLogger: true
            postLogger: true
      routes:
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/**
        - id: catalog-service
          uri: lb://CATALOG-SERVICE
          predicates:
            - Path=/catalog-service/**
        - id: first-service
          uri: lb://my-first-service
          predicates:
            - Path=/first-service/**
        - id: order-service
          uri: lb://ORDER-SERVICE  #spring: application: name: order-service 여기부분으로 찾아가는 것임
          predicates:
            - Path=/order-service/**
          filters:
  #          - AddRequestHeader=first-request, first-requests-header2
  #          - AddResponseHeader=first-response, first-response-header2
             - CustomFilter
        - id: second-service
          uri: lb://my-second-service
          predicates:
            - Path=/second-service/**
          filters:
  #          - AddRequestHeader=second-request, second-requests-header2
  #          - AddResponseHeader=second-response, second-response-header2
             - CustomFilter
             - name : LoggingFilter
               args:
                baseMessage: 하하하하하 난 로깅 필터!
                preLogger: true
                postLogger: true

